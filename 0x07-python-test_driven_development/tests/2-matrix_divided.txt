" this file is about a test_cases for 2-matrix_divided function"
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Let's Try this:
	>>> matrix_divided("hello", 1) #doctest: +NORMALIZE_WHITESPACE
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats
	
	>>> matrix_divided([[1, 2, 3], [2, 5]], 2) #doctest: +NORMALIZE_WHITESPACE
        Traceback (most recent call last):
        TypeError: Each row of the matrix must have the same size
	
	>>> matrix_divided([[5, 6, 2], [1, 2, 3]], "a") #doctest: +NORMALIZE_WHITESPACE
        Traceback (most recent call last):
        TypeError: div must be a number
	
	>>> matrix_divided([[2, 4, 7.5], [1, 2, 3]], 3)
        [[0.67, 1.33, 2.5], [0.33, 0.67, 1.0]]

	>>> matrix_divided([[4, 5, 3], [1, 2, 3]], 0) #doctest: +NORMALIZE_WHITESPACE
        Traceback (most recent call last):
	ZeroDivisionError: division by zero

	>>> matrix_divided([[]], 1) #doctest: +NORMALIZE_WHITESPACE
        Traceback (most recent call last):
        TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix_divided((4, 3), 1) #doctest: +NORMALIZE_WHITESPACE
        Traceback (most recent call last):
        TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix_divided([["a", "b", "c"], [1, 2, 3]], 1) #doctest: +NORMALIZE_WHITESPACE
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats
